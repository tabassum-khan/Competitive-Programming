/*******************************	PROBLEM STATEMENT	*****************************************/

Given an array arr of size n containing only distinct integers, you need to find total times you see a series of consecutive integers of length greater than 1.
A series of consecutive integers is defined as arr[i], arr[i]+1, arr[i]+2...and so on.

Input:
The first line of input contains T denoting the numbers of testcases. T testcases follow. Each testcase contains two lines of input. The first line contains the size of array n. The second line contains the elements of the array.

Output:
For each testcase, in a newline, print the total times you see a series of consecutive numbers.

Constraints:
1 <= T <= 100
1 <= n <= 103
0 <= arri <= 107

Examples:
Input:
3
7
5 7 9 10 11 13 14
6
0 1 2 4 5 7
7
1 0 2 9 3 8 6
Output:
2
2
0

Explanation:
Testcase1: The array is {5 7 9 10 11 13 14}. Here, 9 10 11 is one series of consecutive integers with length greater than 1. Again, 13 14 is another series of consecutive integers with length greater than 1. So, a total of two times we see such a series. Hence the answer is 2.


/***************************************	SOLUTION	*********************************************/

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	    Scanner sc = new Scanner(System.in);
	    int test = sc.nextInt();
	    
	    while(test --> 0){
	        int n = sc.nextInt();
	        int[] arr = new int[n];
	        
	        for (int i=0; i<n; i++)
	            arr[i] = sc.nextInt();
	            
	       int prev = arr[0];
	       int set = 0;
	       boolean found = false;
	       
	       for(int i=1; i<n; i++){
	           //System.out.println("Arr now: " + arr[i] + " " + found);
	           
	           if (arr[i] == ++prev){
	               if (found == false){
	                   set++;
	                   found = true;
	               }
	           }
	           else{
	               found = false;
	           }
	           
	           prev = arr[i];
	       }
	       
	       System.out.println(set);
	    }
	 }
}
